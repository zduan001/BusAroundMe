         -10

    -1          7      

-1     1     8    -11

     3     -5

max sum: 10

    4,3
(-1)3,4



int FindMax(TreeNode root)
{
    if(root== null) return 0;
    int globalMax= int.MinValue;
    int res = FindMaxSum(root, ref globalMax);
    return globalMax;
}

int FindMaxSum(TreeNode root, ref int locaMax )
{
    if(root == null) return 0;
    
    int leftSum = FindMaxSum(root.LeftChild, ref localMax);
    int rightSum = FindMaxSum(root.RightChild, ref localMax);

    
    int first= root.Value + leftSume + rightSum;
    
    
    localMax = first >localMax? first: localMax;
    return first;
}


public class TreeNode
{
    public TreeNode LeftChild;
    public TreeNode RightChild;
    public int Value;
}

        5
    3        -2
6